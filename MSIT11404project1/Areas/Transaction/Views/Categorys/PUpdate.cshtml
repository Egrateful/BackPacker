@model MSIT11404project1.Models.Products
@{
    ViewBag.Title = "修改";
    Layout = "~/Views/Shared/_LayoutPro.cshtml";
}



@section style{
    <style>
        .resize {
            resize: none;
        }

               .list-inline {height:50px
        }
                  .panel-transparent {
        background: none;
            }
    </style>
}



<div class="panel panel-warning THome">
    <div class="panel-heading">

        <ul class="list-inline">
            <li><h3><strong>後臺管理</strong></h3></li>
            <li>
                <ol class="breadcrumb panel-transparent">
                    <li>
                        @Html.ActionLink("拍賣場首頁", "Index", "Products",new { area = "Transaction" },null)
                    </li>
                    <li>
                        <a href="@Url.Action(  "Products","Categorys", new { area = "Transaction" })">後臺管理首頁</a>
                    </li>

                </ol>

            </li>
        </ul>
    </div>

    <div class="panel-body">
        <div class="col-md-4">
            <div class="list-group">

                @Html.Action("CategorysIndex")

            </div>
        </div>

        <div class="col-md-8 ">


            @using (Html.BeginForm("PUpdate", "Categorys", new { area = "Transaction" }, FormMethod.Post, new { @class = "form-horizontal", enctype = "multipart/form-data" }))
            {


                <div class="form-group">
                    @Html.LabelFor(p => p.CategoryID, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-10">
                        @{
                            var Categories = new SelectList(ViewBag.Categorys, "CategoryID", "CategoryName");
                        }
                        @Html.DropDownListFor(p => p.CategoryID, Categories, "請選擇", new { @class = "form-control" })
                        @Html.ValidationMessageFor(p => p.CategoryID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(p => p.ProductName, new { @class = "col-sm-2 control-label" })
                    <div class="col-sm-10">
                        @Html.EditorFor(p => p.ProductName, new { htmlAttributes = new { @class = "form-control", placeholder = "ModelName" } })
                        @Html.ValidationMessageFor(p => p.ProductName, "", new { @class = "text-danger" })
                        @Html.HiddenFor(p => p.ProductID)
                        @Html.HiddenFor(p => p.ByteImge)
                        @Html.HiddenFor(p => p.MemberID)
                        @Html.HiddenFor(p => p.Date)

                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(p => p.ProductImage, new { @class = "col-sm-2 control-label", placeholder = "ProductImage" })

                    <div class="col-sm-10">
                        <img src="@Url.Action("GetImage","Products", new { id = Model.ProductID})" id="img" class="img-thumbnail" width="250" style="margin-top:10px" />
                        @Html.EditorFor(p => p.ProductImage, new { htmlAttributes = new { type = "file", @class = "form-control", placeholder = "ModelName", value = Model.ProductImage } })
                        @Html.ValidationMessageFor(p => p.ProductImage, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(p => p.Quantity, new { @class = "col-sm-2 control-label", placeholder = "UnitCost" })
                    <div class="col-sm-10">
                        @Html.EditorFor(p => p.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(p => p.Quantity, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    @Html.LabelFor(p => p.UnitPrice, new { @class = "col-sm-2 control-label", placeholder = "UnitCost" })
                    <div class="col-sm-10">
                        @Html.EditorFor(p => p.UnitPrice,new { htmlAttributes = new { @class = "form-control ", Value = String.Format("{0:f0}", Model.UnitPrice) } })
                        @Html.ValidationMessageFor(p => p.UnitPrice, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(p => p.ProductContent, new { @class = "col-sm-2 control-label", placeholder = "UnitCost" })
                    <div class="col-sm-10">
                        @Html.TextAreaFor(p => p.ProductContent, new { cols = "100", rows = "10", wrap = "virtual", @class = "resize form-control" })
                        @Html.ValidationMessageFor(p => p.ProductContent, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-sm-offset-2 col-sm-10">
                        <button type="submit" class="btn btn-default">修改產品</button>
                    </div>
                </div>
                @ViewBag.Erro

                            }
        </div>
    </div>
</div>


        @section script{

            <script>

                $("#ProductImage").change(function () {
                    if (this.files && this.files[0]) {
                        var reader = new FileReader();
                        reader.onload = function (e) {
                            $('#img').attr('src', e.target.result);

                        }
                        reader.readAsDataURL(this.files[0]);
                    }
                });
            </script>
        }
